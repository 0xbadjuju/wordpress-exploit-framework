import { Component, OnInit, Input }      from '@angular/core';
import { FormsModule }       from '@angular/forms';
import { ActivatedRoute, Params } from '@angular/router';

import { Session } from '../shared/session';
import { SessionEvent } from '../shared/session-event';
import { SessionService } from '../shared/session.service';

import { Observable, Subscription } from 'rxjs/Rx';
import 'rxjs/add/operator/map';

@Component({
  selector: 'session-detail',
  moduleId: module.id,
  templateUrl: 'session-detail.component.html',
  styleUrls: ['session-detail.component.css']
})

export class SessionDetailComponent implements OnInit {
  private paramsSubscription: any;
  private session: Session = new Session();
  private lastEventId: number = 0;
  private eventSubscription: Subscription;

  @Input() input: string;

  constructor(
    private route: ActivatedRoute,
    private sessionService: SessionService) {
  }

  ngOnInit(): void {
    this.paramsSubscription = this.route.params.subscribe(params => {
      this.sessionService
        .getSession(params['id'])
        .then(this.load.bind(this));
    });
  }

  ngOnDestroy(): void {
    this.paramsSubscription.unsubscribe();
    this.eventSubscription.unsubscribe();
  }

  load(session: Session): void {
    this.session = session;
    this.lastEventId = Math.max.apply(Math, session.events.map(e => e.id));

    this.eventSubscription = Observable
      .interval(1000)
      .flatMap(() => this.sessionService.getEventObserver(this.session.id, this.lastEventId))
      .subscribe(this.addNewEvents.bind(this));
  }

  addNewEvents(events: SessionEvent[]): void {
    if (!events) return;
    this.session.events = this.session.events.concat(events);
    this.lastEventId = Math.max.apply(Math, this.session.events.map(e => e.id));
  }

  sendData(): void {
    console.log(`Sending ${this.input}`);
    this.sessionService
      .sendData(this.session.id, this.input)
      .subscribe(this.handleDataResult.bind(this));
  }

  handleDataResult(result: any): void {
    this.input = '';
  }
}
