import { Injectable }                    from '@angular/core';
import { Headers, Http, RequestOptions } from '@angular/http';

import { Module }       from './module'
import { ModuleOption } from './module-option'
import { Payload }      from './payload'

import 'rxjs/add/operator/toPromise';

@Injectable()
export class ModuleService {
  private headers = new Headers({'Content-Type': 'application/json'});
  private listUrl = '/api/modules/list';
  private detailUrl = '/api/module';
  private payloadsUrl = '/api/payloads';

  constructor(private http: Http) { }

  getModules(type: string): Promise<Module[]> {
    return this.http.get(`${this.listUrl}/${type}`)
               .toPromise()
               .then(response => response.json() as Module[])
               .catch(this.handleError);
  }

  getModule(path: string): Promise<Module> {
    return this.http.get(`${this.detailUrl}/${path}`)
               .toPromise()
               .then(response => response.json() as Module)
               .catch(this.handleError);
  }

  getPayloads(): Promise<Payload[]> {
    return this.http.get(this.payloadsUrl)
               .toPromise()
               .then(response => response.json() as Payload[])
               .catch(this.handleError);
  }

  executeModule(path: string, options: ModuleOption[], payload: Payload): Promise<any> {
    let headers = new Headers({ 'Content-Type': 'application/json' });
    let httpOptions = new RequestOptions({ headers: headers });
    let body = JSON.stringify({ options: options, payload: payload });

    return this.http.post(`${this.detailUrl}/${path}`, body, httpOptions)
               .toPromise()
               .then(response => response.json())
               .catch(this.handleError);
  }

  private handleError(error: any): Promise<any> {
    console.error('An error occurred', error);
    return Promise.reject(error.message || error);
  }
}
