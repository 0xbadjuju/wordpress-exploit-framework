import { Component, OnInit }      from '@angular/core';
import { ActivatedRoute, Params } from '@angular/router';

import { ToastyService, ToastyConfig, ToastOptions, ToastData } from 'ng2-toasty';

import { Module }        from '../shared/module'
import { Payload }       from '../shared/payload'
import { ModuleService } from '../shared/module.service'
import { ModuleOptionComponent } from './module-option.component'

@Component({
  selector: 'module-detail',
  moduleId: module.id,
  templateUrl: 'module-detail.component.html'
})

export class ModuleDetailComponent implements OnInit {
  private paramsSubscription: any;
  private module: Module = new Module();
  private payload: Payload = new Payload();
  private payloads: Payload[];
  private path: string;
  private runningModule: boolean = false;

  constructor(
    private route: ActivatedRoute,
    private moduleService: ModuleService,
    private toastyService: ToastyService,
    private toastyConfig: ToastyConfig) {
      this.toastyConfig.theme = 'bootstrap';
  }

  ngOnInit(): void {
    this.paramsSubscription = this.route.params.subscribe(params => {
      this.path = `${params['type']}/${params['name']}`;

      this.moduleService.getModule(this.path)
          .then(module => this.module = module);

      this.moduleService.getPayloads()
          .then(payloads => this.payloads = payloads);
    });
  }

  ngOnDestroy(): void {
    this.paramsSubscription.unsubscribe();
  }

  runModule(): void {
    if (this.runningModule) return;

    this.runningModule = true;
    this.moduleService
        .executeModule(this.path, this.module.options, this.payload)
        .then(result => console.log(result))
        .catch(error => this.addErrorToast(error));
  }

  addErrorToast(error: any): void {
    this.runningModule = false
    this.toastyService.error({
        title: "Error",
        msg: "Failed to execute the module.",
        showClose: true,
        timeout: 5000
    });
  }
}
