module Web
  module Controllers
    # Controller to handle all routes relating to a specific module.
    class Module < Base
      def options_hash(options)
        options.map do |o|
          {
            name: o.name,
            desc: o.desc,
            required: o.required,
            default: o.default,
            advanced: o.advanced,
            evasion: o.evasion,
            enums: o.enums,
            regex: o.regex
          }
        end
      end

      get '/:type/:name' do
        type = params['type']
        name = Wpxf.path_to_class_name(params['name'])

        halt unless type.eql?('exploit') || type.eql?('auxiliary')

        begin
          namespace = type.eql?('exploit') ? Wpxf::Exploit : Wpxf::Auxiliary
          mod = namespace.const_get(name).new
        rescue NameError
          halt 404
        end

        json(
          title: mod.module_name,
          desc: mod.module_desc,
          references: mod.module_references,
          authors: mod.module_author,
          date: mod.module_date,
          options: options_hash(mod.options)
        )
      end
    end
  end
end
