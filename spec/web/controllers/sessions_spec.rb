require_relative '../../spec_helper'

describe Web::Controllers::Sessions do
  let(:app) { described_class }

  it_behaves_like 'a route controller'

  describe 'GET /' do
    it 'returns a blank JSON array if no sessions exist' do
      get '/'
      expect(last_response.body).to eq '[]'
    end

    it 'returns all sessions as JSON' do
      session = Web::Models::Session.new
      session.module_path = 'exploit/name'
      session.save!

      get '/'
      expect(last_response.body).to eq Web::Models::Session.all.to_json
    end
  end

  describe 'GET /:session_id' do
    it 'returns the requested session' do
      session = Web::Models::Session.new
      session.module_path = 'exploit/name'
      session.save!

      expected_object = {
        id: session.id,
        module_path: session.module_path,
        created_at: session.created_at,
        events: session.events
      }

      get "/#{session.id}"
      expect(last_response.body).to eq expected_object.to_json
    end

    it 'sets the response status to 404 if the session does not exist' do
      get '/9001'
      expect(last_response.not_found?).to be true
    end
  end
end
